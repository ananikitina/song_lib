basePath: /
definitions:
  models.AddSongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    properties:
      createdAt:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://example.com/support
  description: This is a simple API for managing songs and their verses in a song
    library.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://example.com/terms/
  title: Song Library API
  version: "1.0"
paths:
  /add-song:
    post:
      consumes:
      - application/json
      description: Add a new song and associate it with a group
      parameters:
      - description: Add song request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AddSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Song added
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add new song
      tags:
      - songs
  /delete-song/{id}:
    delete:
      description: Delete a song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Song deleted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete song
      tags:
      - songs
  /songs:
    get:
      description: Retrieve a list of all songs with optional filters and pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      - description: Additional filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of songs
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all songs
      tags:
      - songs
  /songs/{id}/verses:
    get:
      description: Retrieve a paginated list of verses for a specific song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Verses data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid song ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get song verses with pagination
      tags:
      - songs
  /update-song/{id}:
    put:
      consumes:
      - application/json
      description: Update song details by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song details to update
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Song updated
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update song
      tags:
      - songs
schemes:
- http
swagger: "2.0"
